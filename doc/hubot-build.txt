# If Ansible not available locally - e.g. running on Windows - make a machine and load Ansible into it.

vagrant up --no-provision

vagrant ssh

sudo apt-get install software-properties-common
sudo apt-add-repository -y ppa:ansible/ansible   # override prompts to confirm install
sudo apt-get update
sudo apt-get -y install ansible   # override prompts to confirm install

sudo apt-get -y install git

git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git config --global push.default simple

git clone https://github.com/breaker-of-stone/infobot.git

ansible -i ./ansible/ansible_inventory --private-key=~/.vagrant.d/insecure_private_key -u vagrant all -m setup --tree ./ansible/facts

# make a second vagrant - clone the repo again:

vagrant up --no-provision

# insert in vagrantfile

bridge: 'en0: Wi-Fi (AirPort)'

new_ip=$(vagrant ssh -c "ip address show eth1 | grep 'inet ' | sed -e 's/^.*inet //' -e 's/\/.*$//'")
echo "default ansible_ssh_host=${new_ip}" >ansible/hosts/default

curl -sL https://deb.nodesource.com/setup | sudo bash -
# capture script in ansible /files folder
# it creates /etc/apt/sources.list.d/nodesource.list

hubot --create infobot  # deprecated
https://github.com/github/hubot/blob/master/docs/README.md
Agrs to yeoman:
-—owner 	Bot owner, e.g. "Bot Wrangler bw@example.com"
--name 	Bot name, e.g. "Hubot"
--description 	Bot description, e.g. "Delightfully aware robutt"
--adapter 	Bot adapter, e.g. "campfire"
--defaults 	Declare all defaults are set and no prompting required

npm install -g yo generator-hubot
    mkdir -p infobot
    yo hubot

# HUBOT_NAME environment variable respected by

Location of the hubot instance: /home/vagrant/infobot # for ansible npm path variable

# load coffee-script globally *before* node to avoid node’s inbuilt coffee blocking install

cd infobot

git init
  The program 'git' is currently not installed.

git config --global push.default simple

git add .
git commit -m "Initial commit"

git clone https://github.com/breaker-of-stone/infobot.git

bin/hubot --name infobot

bin/hubot

https://github.com/pekim/tedious

# Vagrantfile syntax is Ruby.  Handle command line args like this:

config.vm.provider :virtualbox do |vb|
  vb.gui = false
  if ARGV[0] == "up"
    if ENV["VB_GUI"] == "true" then vb.gui = true
    else
       puts("[info] VB_GUI environment variable not set so running headless")
    end
  end
end

# installing docker:

$ sudo apt-get update
$ wget -qO- https://get.docker.com/ | sh


